class Solution {
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> cur;
        
        std::sort(nums.begin(), nums.end());
        dfs(0, nums, cur, ans);
        return ans;
    }
private:
    void dfs(int start, vector<int>& nums, vector<int>& cur, vector<vector<int>>& ans) {
        ans.push_back(cur);
        
        for(int i = start; i < nums.size();++i) {
            if(i > start && nums[i] == nums[i - 1])
                continue;
            cur.push_back(nums[i]);
            dfs(i + 1, nums, cur, ans);
            cur.pop_back();
        }
    }
};
