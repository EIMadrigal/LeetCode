class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> ans;
        string cur;
        
        generateParenthesis(n, n, cur, ans);
        return ans;
    }
private:
    void generateParenthesis(int left, int right, string& cur, vector<string>& ans) {
        if(left + right == 0) {
            ans.push_back(cur);
            return;
        }
        if(left > right)
            return;
        
        if(left > 0) {
            generateParenthesis(left - 1, right, cur += "(", ans);
            cur.pop_back();
        }
        if(right > 0) {
            generateParenthesis(left, right - 1, cur += ")", ans);
            cur.pop_back();
        }
    }
};
