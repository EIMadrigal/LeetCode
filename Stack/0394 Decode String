class Solution {
public:
    string decodeString(string s) {
        stack<string> st;
        int i = 0;
        
        while (i < s.length()) {
            if (s[i] == ']') {
                string base;
                while (!st.empty() && st.top() != "[") {
                    base.insert(0, st.top());
                    st.pop();
                }
                
                st.pop(); // pop [
                stringstream ss;
                int cnt;
                ss << st.top();
                ss >> cnt;
                st.pop(); // pop count numbers
                string cur;
                while (cnt-- > 0) {
                    cur += base;
                }
                st.push(cur);
                ++i;
            }
            else if (s[i] >= '0' && s[i] <= '9') {
                string cnt;
                while (i < s.length() && s[i] >= '0' && s[i] <= '9') {
                    cnt += s[i++];
                }
                st.push(cnt);
            }
            else if (s[i] >= 'a' && s[i] <= 'z') {
                string cur;
                while (i < s.length() && s[i] >= 'a' && s[i] <= 'z') {
                    cur += s[i++];
                }
                st.push(cur);
            }
            else {
                st.push(s.substr(i, 1));
                ++i;
            }
        }
        
        string ans;
        while (!st.empty()) {
            ans.insert(0, st.top());
            st.pop();
        }
        return ans;
    }
};
