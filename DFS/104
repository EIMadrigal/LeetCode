https://leetcode.com/problems/maximum-depth-of-binary-tree/

My Solution:

Thought：
	树的高度就是max(left,right)+1，递归边界是NULL。
		
Code：
/**
 * Definition for a binary tree node.
 * struct TreeNode{
 * 		int val;
 * 		TreeNode* left;
 * 		TreeNode* right;
 * 		TreeNode(int x):val(x),left(NULL),right(NULL) {}
 * };
 */
class Solution{
public:
	int maxDepth(TreeNode* root) {
		if (!root)
			return 0;
		return max(maxDepth(root->left), maxDepth(root->right)) + 1;
    }
 };
 
Performance:
	Runtime:16ms, beats 99.25%
	Memory:19.6MB, beats 28.68%
		
Superior Solution:

Thought：
	讨论区做法就是将上述代码简化。
		
Code：
class Solution{
public:
	int maxDepth(TreeNode* root) {
		return !root ? 0 : max(maxDepth(root->left), maxDepth(root->right)) + 1;
    }
 };

Performance:
	Runtime:24ms, beats 10.58%
	Memory:19.7MB, beats 6.57%
