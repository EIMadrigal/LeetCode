/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    Node* treeToDoublyList(Node* root) {
        if (!root) {
            return nullptr;
        }
        inOrder(root);
        head->left = prev;
        prev->right = head;
        return head;
    }

    void inOrder(Node* cur) {
        if (!cur) {
            return;
        }
        inOrder(cur->left);
        if (!prev) {
            head = cur;
        }
        else {
            prev->right = cur;
            cur->left = prev;
        }
        prev = cur;
        inOrder(cur->right);
    }

    Node* prev = nullptr, *head = nullptr;
};
