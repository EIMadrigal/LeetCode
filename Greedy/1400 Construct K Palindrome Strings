class Solution {
public:
    bool canConstruct(string s, int k) {
        const int n = s.size();
        if (n < k) {
            return false;
        }
        
        // 出现偶数次的字符没有影响
        // each palindrome can consume at most one char with odd frequency
        vector<int> cnt(26, 0);
        for (char c : s) {
            cnt[c - 'a'] ^= 1;
        }
        return count(begin(cnt), end(cnt), 1) <= k;
    }
};
