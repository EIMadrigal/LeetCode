# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 
# @param head ListNode类 
# @param val int整型 
# @return ListNode类
#
class Solution:
    def deleteNode(self, head: ListNode, val: int) -> ListNode:
        pre = dummy = ListNode(-1)
        dummy.next = head
        while pre:
            if pre.next.val == val:
                pre.next = pre.next.next
                return dummy.next
            pre = pre.next
        return dummy.next


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteNode(ListNode* head, int val) {
        ListNode preHead(-1), *dummy = &preHead;
        dummy->next = head;
        ListNode* cur = head, *prev = dummy;
        while (cur) {
            if (cur->val == val) {
                prev->next = cur->next;
                break;
            }
            cur = cur->next;
            prev = prev->next;
        }
        return dummy->next;
    }
};
