//设置一个头结点。主要判断当前结点的下一个结点值是否与下下一个结点值相等：若相等，就让cur->next指向下下一个结点，否则让cur向前走。
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode *dummy = new ListNode(-1);
        dummy->next = head;
        ListNode *cur = dummy; 
        
        while(cur->next && cur->next->next)
        {
            if(cur->next->val == cur->next->next->val)
            {
                int sameNum = cur->next->val;
                while(cur->next && sameNum == cur->next->val)
                    cur->next = cur->next->next;
            }
            else
                cur = cur->next;
        }
        
        return dummy->next;
    }
};
