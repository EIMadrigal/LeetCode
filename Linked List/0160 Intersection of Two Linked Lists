# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:
        curA, curB = headA, headB
        lenA, lenB = 0, 0
        while curA:
            curA = curA.next
            lenA += 1
        while curB:
            curB = curB.next
            lenB += 1
        curA, curB = headA, headB
        if lenB > lenA:
            lenA, lenB = lenB, lenA
            curA, curB = curB, curA
        diff = lenA - lenB
        while diff:
            curA = curA.next
            diff -= 1
        while curA:
            if curA == curB:
                return curB
            curA, curB = curA.next, curB.next
        return None
