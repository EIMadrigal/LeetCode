/**
找到要逆序的前一个结点insertPos，采用头插法对m~n中的结点依次插入到insertPos->next。
**/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int m, int n) {
        ListNode *dummy = new ListNode(-1);
        dummy->next = head;
        ListNode *cur = dummy, *insertPos = nullptr;
        
        for(int i = 0;cur;i++)
        {
            if(i == m - 1)
            {
                insertPos = cur;
                cur = cur->next;
                break;
            }
            cur = cur->next;
        }
        for(int i = 0;i < n - m;i++)
        {
            if(cur && cur->next)
            {
                //先保存逆序子链表的第一个结点
                ListNode *pre = insertPos->next;
                
                insertPos->next = cur->next;
                cur->next = cur->next->next;
                insertPos->next->next = pre;
            }
        }
        
        return dummy->next;
    }
};
