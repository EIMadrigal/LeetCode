class Solution {
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        if(grid.empty()) return 0;
        
        int area = 0;
        int row = grid.size(), col = grid[0].size();
        for(int i = 0;i < row;i++)
            for(int j = 0;j < col;j++) {
                if(grid[i][j] == 1) {
                    area = max(area, dfs(grid, row, col, i, j));
                }
            }
        return area;
    }
private:
    int dfs(vector<vector<int>>& grid, int row, int col, int y, int x) {
        if(x < 0 || x >= col || y < 0 || y >= row || grid[y][x] == 0) return 0;
        
        grid[y][x] = 0;
        return 1 + dfs(grid, row, col, y, x - 1) + dfs(grid, row, col, y - 1, x)
                 + dfs(grid, row, col, y, x + 1) + dfs(grid, row, col, y + 1, x);
    }
};
