class Solution {
public:
    int findCircleNum(vector<vector<int>>& M) {
        if(M.empty()) return 0;
        
        int N = M.size();
        int ans = 0;
        vector<bool> visited(N, false);
        for(int i = 0;i < N;i++) {
            if(!visited[i]) {
                dfs(M, visited, i);
                ans++;
            }
        }
            
        return ans;
    }
private:
    void dfs(vector<vector<int>>& M, vector<bool>& visited, int person) {
        for(int other = 0;other < M.size();other++) {
            if(M[person][other] == 1 && !visited[other]) {
                visited[other] = true;
                dfs(M, visited, other);
            }
        }
    }
};
