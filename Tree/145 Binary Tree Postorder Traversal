/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
// Recursive
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ans;
        postorderTraversal(root, ans);
        return ans;
    }
private:
    void postorderTraversal(TreeNode* root, vector<int>& ans) {
        if(!root) {
            return;
        }
        
        postorderTraversal(root->left, ans);
        postorderTraversal(root->right, ans);
        ans.push_back(root->val);
    }
};


// Iterative
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        if(!root) {
            return {};
        }
        
        // postorder's reverse is root->right->left
        deque<int> ans;
        stack<TreeNode*> s;
        s.push(root);
        while(!s.empty()) {
            TreeNode* cur = s.top();
            s.pop();
            ans.push_front(cur->val);
            if(cur->left)
                s.push(cur->left);
            if(cur->right)
                s.push(cur->right);
        }
        
        return vector<int>(ans.begin(), ans.end());
    }
};
