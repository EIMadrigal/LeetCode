class Solution {
public:
    bool search(vector<int>& nums, int target) {
        // nums[m] >= nums[l]: 左半部分有序；nums[m] < nums[l]: 右半部分有序
		const int n = nums.size();
		if (n == 0)
			return false;

		int l = 0, r = n - 1;
		while (l <= r) {
			int m = l + ((r - l) >> 1);
			if (nums[m] == target)
				return true;
            
            if(nums[m] == nums[l] && nums[m] == nums[r]) {
                ++l;
                --r;
            }
			else if (nums[m] >= nums[l]) {
				if (target < nums[m] && target >= nums[l])
					r = m - 1;
				else
					l = m + 1;
			}
			else {
				if (target <= nums[r] && target > nums[m])
					l = m + 1;
				else
					r = m - 1;
			}
		}
		return false;
    }
};
