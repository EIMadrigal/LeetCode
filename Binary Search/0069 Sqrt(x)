// binary search
class Solution {
public:
    int mySqrt(int x) {
        // 左闭右开
        long l = 1, r = static_cast<long>(x) + 1;
        
        while(l < r) {
            long m = l + ((r - l) >> 1);
            if(x >= m * m)
                l = m + 1;
            else
                r = m;
        }
        return l - 1;
    }
};


// Newton's method
class Solution {
public:
    int mySqrt(int x) {
        const double epsilon = 1e-2;
        double ans = x;
        while(ans * ans - x > epsilon)
            ans = (ans + x / ans) / 2.0;
        return ans;
    }
};
