class Solution {
public:
    bool isHappy(int n) {
        unordered_map<int, bool> show;
        while (n != 1) {
            int sum = 0;
            show[n] = true;
            while (n) {
                sum += (n % 10) * (n % 10);
                n /= 10;
            }
            if (show[sum]) {
                return false;
            }
            n = sum;
        }
        return true;
    }
};


class Solution:
    def isHappy(self, n: int) -> bool:
        
        def cal(n: int) -> int:
            s = 0
            while n:
                digit = n % 10
                s += digit ** 2
                n //= 10
            return s
        
        record = set()
        while True:
            if n == 1:
                return True
            if n in record:
                return False
            record.add(n)
            n = cal(n)
