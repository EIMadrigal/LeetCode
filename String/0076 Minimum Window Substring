class Solution {
    public String minWindow(String s, String t) {
        if (s == null || t == null || s.length() == 0 || t.length() == 0) {
            return "";
        }
        int[] hash = new int[256];
        for (char c : t.toCharArray()) {
            hash[c]++;
        }
        int l = 0, r = 0, cnt = t.length();
        int ansL = 0, ansR = Integer.MAX_VALUE;
        while (r < s.length()) {
            char c = s.charAt(r);
            if (hash[c] > 0) {
                cnt--;
            }
            hash[c]--;
            r++;
            
            if (cnt == 0) {
                while (hash[s.charAt(l)] < 0) {
                    hash[s.charAt(l)]++;
                    l++;
                }
                if (r - l < ansR - ansL) {
                    ansL = l;
                    ansR = r;
                }
                hash[s.charAt(l)]++;
                cnt++;
                l++;
            }
        }
        
        return ansR == Integer.MAX_VALUE ? "" : s.substring(ansL, ansR);
    }
}
