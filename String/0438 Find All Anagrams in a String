// sliding window algorithm
class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> res = new ArrayList<>();
        if (s == null || s.length() == 0 || p == null || p.length() == 0)
            return res;
        
        int[] hash = new int[256];
        for (char c : p.toCharArray()) {
            hash[c]++;
        }
        
        int l = 0, r = 0, cnt = p.length();
        while (r < s.length()) {
            char c = s.charAt(r);
            // if the char is in p, decrease cnt
            if (hash[c] > 0) {
                --cnt;
            }
            hash[c]--;
            ++r;
            // we find the right ans
            if (cnt == 0)
                res.add(l);
            
            // narrow the window, the char in p won't go below 0, other chars might be
            if (r - l == p.length()) {
                char cc = s.charAt(l);
                // if the char is in p, increase cnt
                if (hash[cc] >= 0) {
                    ++cnt;
                }
                // reset hashtable
                hash[cc]++;
                ++l;
            }
        }
        return res;
    }
}
