class Solution {
public:
    // catalan number
    // dp(0) = 1, empty tree
    // dp(1) = 1 = dp(0) * dp(0), root is 1
    // dp(2) = 2 = dp(0) * dp(1) + dp(1) * dp(0) = root1 + root2
    // dp(3) = 5 = dp(0) * dp(2) + dp(1) * dp(1) + dp(2) * dp(0) = root1 + root2 + root3
    // dp(n + 1) = sum(dp(i) * dp(n - i)), i = 0~n
    int numTrees(int n) {
        vector<int> dp(n + 1, 0);
        dp[0] = 1, dp[1] = 1;
        for (int i = 2; i <= n; ++i)
            for (int j = 0; j < i; ++j) {
                dp[i] += dp[j] * dp[i - 1 - j];
            }
        return dp[n];
    }
};
