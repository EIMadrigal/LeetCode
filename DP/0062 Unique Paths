class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m + 1, vector<int>(n + 1));
        for(int i = 0;i < m + 1;++i) {
            dp[i][0] = 0;
            dp[i][1] = 1;
        }
        for(int i = 0;i < n + 1;++i) {
            dp[0][i] = 0;
            dp[1][i] = 1;
        }
        for(int i = 1;i <= m;++i)
            for(int j = 1;j <= n;++j) {
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            }
        return dp[m][n];
    }
};


class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<int> dp(n, 1);
        for(int i = 1;i < m;++i) {
            for(int j = 1;j < n;++j) {
                int pre = dp[j];
                dp[j] = pre + dp[j - 1];
            }
        }
        return dp[n - 1];
    }
};
