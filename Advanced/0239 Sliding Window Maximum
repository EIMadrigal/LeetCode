class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ans;
        deque<int> dq; // front存储当前窗口最大值
        for (int i = 0; i < nums.size(); ++i) {
            while (!dq.empty() && nums[i] > nums[dq.back()]) {
                dq.pop_back();
            }
            
            if (!dq.empty() && i - dq.front() >= k) {
                dq.pop_front();
            }
            dq.push_back(i);
            if (i + 1 >= k) {
                ans.push_back(nums[dq.front()]);
            }
        }
        return ans;
    }
};
